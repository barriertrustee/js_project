const squares=Array.from(document.querySelectorAll(".square")),numberButtons=Array.from(document.querySelectorAll(".number")),checkingButton=document.querySelector(".checking"),resetButton=document.querySelector(".reset"),rightAnswers=document.querySelector(".right-answer"),rightAudio=document.querySelector("audio.right-answer"),wrongAnswer=document.querySelector(".wrong-answer"),wrongAudio=document.querySelector("audio.wrong-answer"),retryButton=document.createElement("button");let numberOfRows=9,numberOfColumns=9,rowGrid=[],columnGrid=[],squareGrid=[];for(let i=0;i<numberOfRows;i++)rowGrid.push([]),columnGrid.push([]);for(let i=0;i<numberOfColumns/3;i++)squareGrid.push([[],[],[]]);function ifTheSudokuWasNotComplete(){rowGrid.every(row=>row.every(object=>0!==object.value))||(rowGrid.forEach((row,index)=>{0!==index&&row.forEach(object=>object.value=0)}),rowGrid.forEach((row,rowIndex)=>{if(0===rowIndex)return;let possibleValue=[1,2,3,4,5,6,7,8,9];row.forEach((object,objectIndex)=>{let possibleObjectValue=Array.from(possibleValue);columnGrid[objectIndex].forEach(square=>{if(0===square.value)return;if(!1===possibleObjectValue.includes(square.value))return;let index=possibleObjectValue.indexOf(square.value);possibleObjectValue.splice(index,1)});let squareRow=Math.floor(objectIndex/3),squareColumn=Math.floor(rowIndex/3);squareGrid[squareColumn][squareRow].forEach(square=>{if(0===square.value)return;if(!1===possibleObjectValue.includes(square.value))return;let index=possibleObjectValue.indexOf(square.value);possibleObjectValue.splice(index,1)});let randomValue=Math.floor(Math.random()*possibleObjectValue.length);object.value=possibleObjectValue[randomValue];let index=possibleValue.indexOf(object.value);possibleValue.splice(index,1),void 0===object.value&&(object.value=0),object.element.innerText=object.value})}),ifTheSudokuWasNotComplete())}squares.forEach((square,index)=>{let indexOfRow=Math.floor(index/numberOfRows),indexOfColumn=index%numberOfColumns,indexOfSquareRow=Math.floor(indexOfRow/3),indexOfSquareColumn=Math.floor(indexOfColumn/3),object={element:square,value:0};columnGrid[indexOfColumn].push(object),rowGrid[indexOfRow].push(object),squareGrid[indexOfSquareRow][indexOfSquareColumn].push(object)}),rowGrid.forEach((row,rowIndex)=>{let possibleValue=[1,2,3,4,5,6,7,8,9];row.forEach((object,objectIndex)=>{let possibleObjectValue=Array.from(possibleValue);columnGrid[objectIndex].forEach(square=>{if(0===square.value)return;if(!1===possibleObjectValue.includes(square.value))return;let index=possibleObjectValue.indexOf(square.value);possibleObjectValue.splice(index,1)});let squareRow=Math.floor(objectIndex/3),squareColumn=Math.floor(rowIndex/3);squareGrid[squareColumn][squareRow].forEach(square=>{if(0===square.value)return;if(!1===possibleObjectValue.includes(square.value))return;let index=possibleObjectValue.indexOf(square.value);possibleObjectValue.splice(index,1)});let randomValue=Math.floor(Math.random()*possibleObjectValue.length);object.value=possibleObjectValue[randomValue];let index=possibleValue.indexOf(object.value);possibleValue.splice(index,1),void 0===object.value&&(object.value=0),object.element.innerText=object.value,object.element.disabled=!0})}),rowGrid.some(row=>row.some(object=>0===object.value))&&ifTheSudokuWasNotComplete();for(let i=0;i<41;i){let randomRow=Math.floor(Math.random()*numberOfRows),randomColumn=Math.floor(Math.random()*numberOfColumns);0!==rowGrid[randomRow][randomColumn].value&&(rowGrid[randomRow][randomColumn].value=0,rowGrid[randomRow][randomColumn].element.innerText="",rowGrid[randomRow][randomColumn].element.disabled=!1,i++)}let selectedObject={};rowGrid.forEach((row,indexRow)=>{row.forEach((object,indexColumn)=>{object.element.addEventListener("click",()=>{squares.forEach(square=>square.style.backgroundColor=""),row.forEach(square=>square.element.style.backgroundColor="rgba(0, 0, 255, 0.15)"),columnGrid[indexColumn].forEach(square=>square.element.style.backgroundColor="rgba(0, 0, 255, 0.15)");let squareRow=Math.floor(indexRow/3),squareColumn=Math.floor(indexColumn/3);squareGrid[squareRow][squareColumn].forEach(square=>square.element.style.backgroundColor="rgba(0, 0, 255, 0.1)"),object.element.style.backgroundColor="rgba(0, 0, 255, 0.3)",selectedObject.row=indexRow,selectedObject.column=indexColumn})})}),numberButtons.forEach(button=>{button.addEventListener("click",()=>{if(void 0===selectedObject.row)return;let rowIndex=selectedObject.row,columnIndex=selectedObject.column;rowGrid[rowIndex][columnIndex].value=Number(button.innerText),rowGrid[rowIndex][columnIndex].element.innerText=button.innerText})}),checkingButton.addEventListener("click",()=>{function equalArray(arr1=[],arr2=[]){return arr1.length===arr2.length&&!!arr1.every((element,index)=>element===arr2[index])}let allArray,isItSolved;if([rowGrid,columnGrid,squareGrid[0],squareGrid[1],squareGrid[2]].every(arr=>arr.every(element=>equalArray(element.map(object=>object.value).sort(),[1,2,3,4,5,6,7,8,9]))))return squares.forEach(element=>{element.disabled=!0,element.style.backgroundColor=""}),rightAudio.play(),rightAnswers.style.display="flex",void setTimeout(()=>{retryButton.classList.add("retry-button"),retryButton.innerText="Another puzzle!",rightAnswers.append(retryButton)},2e3);wrongAudio.play(),wrongAnswer.style.display="flex",setTimeout(()=>{wrongAnswer.style.display="none"},2e3)}),resetButton.addEventListener("click",()=>{rowGrid.forEach(row=>{row.forEach(object=>{object.element.style.backgroundColor="",!0!==object.element.disabled&&(object.element.innerText="",object.value=0,selectedObject={})})})}),retryButton.addEventListener("click",()=>{rightAnswers.style.display="none",rowGrid.forEach((row,index)=>{0!==index&&row.forEach(object=>object.value=0)}),rowGrid.forEach((row,rowIndex)=>{let possibleValue=[1,2,3,4,5,6,7,8,9];row.forEach((object,objectIndex)=>{let possibleObjectValue=Array.from(possibleValue);columnGrid[objectIndex].forEach(square=>{if(0===square.value)return;if(!1===possibleObjectValue.includes(square.value))return;let index=possibleObjectValue.indexOf(square.value);possibleObjectValue.splice(index,1)});let squareRow=Math.floor(objectIndex/3),squareColumn=Math.floor(rowIndex/3);squareGrid[squareColumn][squareRow].forEach(square=>{if(0===square.value)return;if(!1===possibleObjectValue.includes(square.value))return;let index=possibleObjectValue.indexOf(square.value);possibleObjectValue.splice(index,1)});let randomValue=Math.floor(Math.random()*possibleObjectValue.length);object.value=possibleObjectValue[randomValue];let index=possibleValue.indexOf(object.value);possibleValue.splice(index,1),void 0===object.value&&(object.value=0),object.element.innerText=object.value,object.element.disabled=!0})}),rowGrid.some(row=>row.some(object=>0===object.value))&&ifTheSudokuWasNotComplete();for(let i=0;i<41;i){let randomRow=Math.floor(Math.random()*numberOfRows),randomColumn=Math.floor(Math.random()*numberOfColumns);0!==rowGrid[randomRow][randomColumn].value&&(rowGrid[randomRow][randomColumn].value=0,rowGrid[randomRow][randomColumn].element.innerText="",rowGrid[randomRow][randomColumn].element.disabled=!1,i++)}});